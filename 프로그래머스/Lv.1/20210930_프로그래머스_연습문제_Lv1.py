# -*- coding: utf-8 -*-
"""20210930_프로그래머스 연습문제_Lv1.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1uAuoxDxXVxU5GHgcWpogWolS26OQ8GH_
"""

# 약수의 합 문제
def solution(n):
    n = int(n)
    n_lists = []
    
    # 약수가 들어간 리스트를 만듬
    for i in range(1, n+1):
        if (n % i == 0):
            n_lists.append(i)
    # 그 리스트의 요소들을 int형으로 바꾸고 모두 더함        
    return sum(map(int, n_lists))

solution(12) # 출력값 : 28

########################################################################################

# 자연수 뒤집어 배열로 만들기 문제
def solution(n):
    return list(map(int, reversed(str(n))))

solution(123457) # 출력 : [7, 5, 4, 3, 2, 1]

########################################################################################

# 문자열을 정수로 바꾸기 문제
def solution(s):
    return int(s)

solution('-1234') # 출력 : -1234 (type: int)

########################################################################################

# 문자열 내림차순으로 배치하기 문제
def solution(s):
    return ''.join(sorted(s, reverse=True))
    # 하나로 이어진 문자열로 만들기 위해서 ''.join을 사용한다
    
solution("Zbcdefg") # 출력 : 'gfedcbZ'

########################################################################################

# 문자열 내 p와 y의 개수 문제
def solution(s):
    answer = True
    p = 0
    y = 0

    for i in s:
        # 대소문자 p 혹은 y가 있을 경우마다 개수를 하나씩 증가시킴
        if (i == 'p' or i == "P"):
            p += 1
        elif (i == 'y' or i == 'Y'):
            y += 1
    # 그리고, p와 y의 개수가 같지않으면 False를 나타내도록 함
    if (p != y):
        answer = False

    # bool 형의 변수를 리턴해준다    
    return answer

solution('pPoooyY') # 출력 : True (문자열 안에 p와 y의 개수가 같으므로!)

########################################################################################
