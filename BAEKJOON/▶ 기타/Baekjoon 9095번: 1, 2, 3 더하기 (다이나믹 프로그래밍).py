# 백준 9095번 1, 2, 3 더하기 (다이나믹 프로그래밍)
# 함수로 1, 2, 3 더하기 기능 함수로 구현
def solution(n):
    # 1 -> (1) -> 1개
    if n == 1:
        return 1
    # 2 -> (1+1), (2) -> 2개
    if n == 2:
        return 2
    # 3 -> (1+1+1), (1+2), (2+1), (3) -> 4개
    if n == 3:
        return 4
    # 4 -> 
    # (1+1+1+1), (1+1+2), (1+2+1), (1+3), (2+1+1)
    # (2+2), (3+1) -> 7개
    # 규칙을 보면, 4의 경우 1, 2, 3의 경우의 수를 합한 것과 같다.
    # 5 ->
    # (1+1+1+1+1), (1+1+1+2), (1+1+2+1), (1+1+3)
    # (1+2+1+1), (2+1+1+1), (1+2+2), (2+1+2)
    # (2+2+1), (1+3+1), (3+1+1), 
    # (2+3), (3+2) -> 13개
    # 5의 경우 2, 3, 4번째 경우의 수를 합한 값과 같다는 것을 알 수 있다.
    else:
        # 규칙을 보면, 아래와 같이 1개의 점화식이 나옴
        return solution(n-1) + solution(n-2) + solution(n-3)
        # if (n > 3) : f(n) = f(n-1) + f(n-2) + f(n-3)

# main
T = int(input())

for i in range(T):
    n = int(input())
    print(solution(n))
